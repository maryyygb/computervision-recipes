# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
#
variables:
- group: AzureMLConfig
- name  : 'resource_group'
  value : 'smoketest'
- name  : 'workspace_name'
  value : 'smoketestws'
- name  : 'workspace_region'
  value : 'eastus2'
trigger: none

pr:
- staging 
- master
  
pool:
 vmImage: 'ubuntu-16.04'

steps:

# - task: UsePythonVersion@0
#   inputs:
#     versionSpec: '3.6'
#     architecture: 'x64'
#     addToPath: true
#   displayName: 'Use Python 3.6'

- bash: |
    echo "##vso[task.prependpath]/usr/share/miniconda/bin"
  displayName: Add Conda to PATH

- bash: |
    conda env create -f environment.yml
    pip install paramiko==2.4.2
    pip install azureml-sdk
    source activate cv
    conda env list
    echo Login Azure Account
    az login --service-principal -u $(spidentity) -p $(spsecret) --tenant $(sptenant)
    az account set --subscription $(subscriptionid)
  displayName: 'Create and activate conda environment'

- bash: |
    source activate cv
    python -m ipykernel install --user --name cv --display-name "cv"
    pytest -q --subscription_id=$(subscriptionid) --resource_group=$(resource_group) --workspace_name=$(workspace_name) --workspace_region=$(workspace_region) tests/smoke/test_azureml_notebooks.py
  displayName: 'Install azureml sdk and run azure ml smoke tests'

# - bash: |
#       echo Remove Conda Environment
#       conda remove -n cv --all -q --force -y
#       conda env list
#       echo Done Cleanup
#   displayName: 'Cleanup Task'
#   condition: always()

- bash: |
      source /usr/share/miniconda/etc/profile.d/conda.sh
      echo Execute Resource Group Delete
      existResponse=$(az group exists -n $(resource_group))
      if [ "$existResponse" == "true" ]; then
        echo Deleting project resource group
        az group delete --name $(resource_group) --yes
      else
        echo Project resource group did not exist
      fi
      echo Done Cleanup
  displayName: 'Resource Group Cleanup'
  condition: or(canceled(),failed())


- task: PublishTestResults@2
  displayName: 'Publish Test Results **/test-*.xml'
  inputs:
    testResultsFiles: '**/test-*.xml'
    failTaskOnFailedTests: true
  condition: succeededOrFailed()