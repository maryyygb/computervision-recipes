# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: dsvmbuildagent-gpu
  vmImage: 'cvbp-linuxbuildagent'

steps:

# - bash: |
#     which conda &&
#     yes | conda env remove -n cvbp && 
#     conda env create --quiet -f image_classification/environment.yaml &&
#     conda env list &&
#     source activate cvbp &&
#     which conda
#   displayName: 'Create cvbp conda environment'

# - bash: |
#     'which conda &&
#      source /data/anaconda/etc/profile.d/conda.sh &&
#      source activate cvbp &&
#      pytest image_classification/tests/unit'
#   displayName: 'Activate cvbp conda environment'


- bash: |
    echo "##vso[task.prependpath]/data/anaconda/bin"
  displayName: Add conda to PATH (Linux)

- bash: |
    conda create -q -n cvbp python=3.5 -y
    conda env update -q -n cvbp -f image_classification/environment.yaml
  displayName: 'Conda install dependencies'

- bash: |
    source activate cvbp
    pytest image_classification/tests/unit --junitxml=junit/test-unitttest.xml
  displayName: 'tests'

# - bash: |
#     pytest image_classification/tests/unit --junitxml=junit/test-unitttest.xml
#   displayName: 'tests again without explicitly activating environment'


